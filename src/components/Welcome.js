import React, {Fragment} from 'react'

const Welcome = () => {

  return (
    <Fragment>
    <div id="home-feed" className="row">
      <div className="col-12-lg">
        <div className ="row">
          <h1>Welcome to Subtle</h1>
        </div>

        <div id="feed" className="row">
          <h5>Subtle is a social networking app akin to Pintrest with design inspired by "brutalist web design". Users can make "channels" - a larger idea, like "my favorite artists" - which are comprised of "blocks" - an image with some text describing the block, like a picture of a painting with a description.
          </h5>
          <h5> To test, use - tom@tom.com with password test </h5>
          <h5>The main menu appears when you point your cursor at the "Subtle" icon in the top left corner.</h5>
        </div>
        <div id= "feed" className="row">

          <h4>Notable functionality</h4>
        <div className="row">

          <ul>
            <li>A channel is created by a user and can be followed by many other users.</li>

            <li>If a channel is public, any user can add blocks to it.</li>

            <li>A block can belong to more than one channel. If you see a block on another user's channel that you think would work with a one you've created, you can add that block to your channel.
            </li>

            <li>You can see all of the channels you've created and followed on your profile as well as all your friends.
            </li>

            <li>You can add or remove friends on the site. You can also edit your profile and upload a new profile picture.</li>

            <li>The home page is a "infinite feed" which fetches a friend activities, never rendering the same activity twice.</li>
          </ul>
        </div>

        </div>

        <div id="feed" className="row">
          <h4>Tech Specs</h4>
          <div className="row">
          <ul>
            <li>Subtle uses AWS S3 by way of Active Storage to store uploaded pictures for blocks and user profiles.</li>
            <li>An "infinite feed" which fetches new data as you scroll.</li>
            <li>
            By default rail's serializer will give  basic information on nested data. It will give an id of an instance rather than more specific data, like its name or some text associated with it.
            To combat this and to control the data I'm recieving from my back end, I constructed 'Shallow Serializers' to render specific data on nested items. </li>
            <li>
            Fully functional AUTH using JWT tokens generated by the backend and saved to the front end in localstorage. Allowing a user to close the page and continue to be logged in.</li>
            <li>You can reload on a friend's page and if you're logged in it will render with a that friend's information.</li>
            </ul>
          </div>
        </div>
      </div>
    </div>
  </Fragment>
  )
}

export default(Welcome)
